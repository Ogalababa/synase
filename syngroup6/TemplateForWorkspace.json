{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "syngroup6"
		},
		"AzureTableStorageGo_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureTableStorageGo'"
		},
		"DWH_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DWH'"
		},
		"lsconnection_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsconnection'"
		},
		"sourcedb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sourcedb'"
		},
		"syngroup6-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'syngroup6-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:syngroup6.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"DWH_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "se5group6.database.windows.net"
		},
		"DWH_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Se5A7CGroup6"
		},
		"DWH_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "anton"
		},
		"lsconnection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsagroup6.dfs.core.windows.net/"
		},
		"sourcedb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "se5group6.database.windows.net"
		},
		"sourcedb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Se5GoGroup6"
		},
		"sourcedb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "anton"
		},
		"syngroup6-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsagroup6.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/data_To_DWH_Fact_Salary')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data salary",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "mapping salary",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"achrmEmployee": {},
									"achrmBonus": {},
									"factSalary": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy dwh salary",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Data salary",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"SalarypaymentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalarypaymentID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SalarypaymentID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_LocationLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeelID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_EmployeeEmployeekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DIM_DateDateID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "DECIMAL",
											"scale": 5,
											"precision": 15
										},
										"sink": {
											"name": "Salary",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Bonus"
										},
										"sink": {
											"name": "Bonus",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_fact_salary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_salary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/mapping salary')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_fact_salary')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_salary')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalae_To_DWH_Fact_Salesorder')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mapping salesorde go",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "mapping_fact_salesorder",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductID": {},
									"CustomerID": {},
									"EmployeeID": {},
									"orderdetailsGO": {},
									"orderHeader": {},
									"goDalesorder": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy fact salesorder Go",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping salesorde go",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"SalesorderID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesorderID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SalesorderID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_ProductProductKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_CustomerCustomerKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_SalesLocation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_EmployeeEmployeekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DIM_DateDateID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LineTotal",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "UNIT_PRICE",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DiscountUnitPrice",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DiscountUnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ActualUnitPrice",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ActualUnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fact_salseorder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_fact_salseorder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "mapping salesorder anv",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "mapping salesorde go",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "salesorder anc",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ancSalesorder": {},
									"ancSalesorderItems": {},
									"ancProduct": {},
									"ancCustomerDiscount": {},
									"factSalesorderANC": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy fact salesorder ANC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping salesorder anv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"SalesorderID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesorderID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SalesorderID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DIM_ProductProductKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_ProductProductKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DIM_CustomerCustomerKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_CustomerCustomerKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DIM_SalesLocation",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_SalesLocation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DIM_EmployeeEmployeekey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_EmployeeEmployeekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DIM_DateDateID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DIM_DateDateID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LineTotal",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "unit_price",
											"type": "Decimal",
											"physicalType": "DECIMAL",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DiscountUnitPrice",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DiscountUnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ActualUnitPrice",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ActualUnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fact_salesorder_ANC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_fact_salseorder",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/mapping_fact_salesorder')]",
				"[concat(variables('workspaceId'), '/datasets/fact_salseorder')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_fact_salseorder')]",
				"[concat(variables('workspaceId'), '/dataflows/salesorder anc')]",
				"[concat(variables('workspaceId'), '/datasets/fact_salesorder_ANC')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_To_DWH_Dim_Customer')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mapping customer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "mapping_customer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"goCustomer": {},
									"source1": {},
									"source2": {},
									"dimGoCustomer": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy go customer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CustomerKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RETAILER_CODE",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_Customerlocation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Discount",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Discount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "COMPANY_NAME",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Companyname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_go_customer2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_go_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy ANC customer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy go customer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CustomerKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_Customerlocation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "discount",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Discount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "company_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Companyname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_ANC_customer2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_go_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/mapping_customer')]",
				"[concat(variables('workspaceId'), '/datasets/dim_go_customer2')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_go_customer')]",
				"[concat(variables('workspaceId'), '/datasets/dim_ANC_customer2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_To_DWH_Dim_Location')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mapping_dim_Location",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "mapping_country",
								"type": "DataFlowReference",
								"parameters": {
									"go": "'go'"
								},
								"datasetParameters": {
									"goSalesBranch": {},
									"country": {},
									"ancCustomer": {},
									"dimGoLocation": {},
									"dimAncCustomer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy go location",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping_dim_Location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"LocationID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Adress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGION",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_go_location",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_dim_location",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy anc customer location",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy go location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"LocationID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "address",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Adress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_anc_cus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_dim_location",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy anc employee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy anc customer location",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"LocationID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "street",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Adress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_anc_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_dim_location",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-06T14:14:15Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/mapping_country')]",
				"[concat(variables('workspaceId'), '/datasets/dim_go_location')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_dim_location')]",
				"[concat(variables('workspaceId'), '/datasets/dim_anc_cus')]",
				"[concat(variables('workspaceId'), '/datasets/dim_anc_employee')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_To_DWH_Dim_employee')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mappingDimEmployee",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dim_employee",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"go": {},
									"anc": {},
									"ancDepartment": {},
									"GoDimEmployee": {},
									"ANCDimEmployee": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy dim_go_employee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mappingDimEmployee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"Employeekey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Employeekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SALES_STAFF_CODE",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "EployeeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SALES_BRANCH_CODE",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DepartmentID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FIRST_NAME",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LAST_NAME",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Lastname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employeestatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Employeestatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DATE_HIRED",
											"type": "DateTime",
											"physicalType": "DATE"
										},
										"sink": {
											"name": "Startdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Enddate",
											"type": "DateTime",
											"physicalType": "DATE"
										},
										"sink": {
											"name": "Enddate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_go_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_dim_employee_go",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy dim_anc_emplpyee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy dim_go_employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"Employeekey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Employeekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "emp_id",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "EployeeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "dept_id",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DepartmentID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "emp_fname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "emp_lname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Lastname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "dept_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Department",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Employeestatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "DateTime",
											"physicalType": "DATE"
										},
										"sink": {
											"name": "Startdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "termination_date",
											"type": "DateTime",
											"physicalType": "DATE"
										},
										"sink": {
											"name": "Enddate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_anc_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_anc_employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/dim_employee')]",
				"[concat(variables('workspaceId'), '/datasets/dim_go_employee')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_dim_employee_go')]",
				"[concat(variables('workspaceId'), '/datasets/dim_anc_employee')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_anc_employee')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_To_DWH_Dim_product')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mapping_Dim_product",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "go_Product",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"go": {},
									"goProductType": {},
									"ancProduct": {},
									"goProduct": {},
									"dimAncProduct": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "to_dwh_dim_product_go",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping_Dim_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ProductKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PRODUCT_NAME",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Productname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRODUCT_TYPE_CODE",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Producttype",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PRODUCTION_COST",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Productioncost",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "PRODUCT_NUMBER",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Productcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRODUCT_TYPE_EN",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Productcatagory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "productdescription"
										},
										"sink": {
											"name": "Productdescription",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_go_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_product_go",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "to_dwh_dim_product_anc_copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "to_dwh_dim_product_go",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ProductKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductKey",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Productname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Producttype"
										},
										"sink": {
											"name": "Producttype",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "productioncost"
										},
										"sink": {
											"name": "Productioncost",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Productcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Productcatagory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "description",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Productdescription",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dim_anc_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_product_anc",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-06T16:53:02Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/go_Product')]",
				"[concat(variables('workspaceId'), '/datasets/dim_go_product')]",
				"[concat(variables('workspaceId'), '/datasets/dim_product_go')]",
				"[concat(variables('workspaceId'), '/datasets/dim_anc_product')]",
				"[concat(variables('workspaceId'), '/datasets/dim_product_anc')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_To_DWH_Fact_Inventory')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mapping Fact Inventory",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Fact_Inventory",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"goInventoryLevel": {},
									"ancProduct": {},
									"goProduct": {},
									"GOINVENTORY": {},
									"factIntventoryANC": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data fact go",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping Fact Inventory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"InventorymanagementID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DIM_DateID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DIM_DateID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "DIM_ProductProductID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_ProductProductID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InventorymanagementID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "InventorymanagementID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalPrice",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Totalprice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Totalamount",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Totalamount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Unitprice",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Unitprice",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_intvantory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data fact ANC",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data fact go",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"InventorymanagementID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DIM_DateID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DIM_DateID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "DIM_ProductProductID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DIM_ProductProductID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InventorymanagementID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "InventorymanagementID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalPrice",
											"type": "Decimal",
											"physicalType": "DECIMAL",
											"scale": 0,
											"precision": 29
										},
										"sink": {
											"name": "Totalprice",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Totalamount",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Totalamount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Unitprice",
											"type": "Decimal",
											"physicalType": "DECIMAL",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Unitprice",
											"type": "Double",
											"physicalType": "float"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fact_anc_int",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_intvantory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Fact_Inventory')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet2')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_intvantory')]",
				"[concat(variables('workspaceId'), '/datasets/fact_anc_int')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_To_DWH_Promotionreview')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "mapping promotion",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PromotionGO",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"goPromotion": {},
									"goCampaign": {},
									"sinkFactPromotionReview": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy promotion",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "mapping promotion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PromotionID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PROMOTIONID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PromotionID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DISCOUNT",
											"type": "Single",
											"physicalType": "FLOAT"
										},
										"sink": {
											"name": "Discount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EndDateID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "EndDateID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ProductKey",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fact_promotion_go",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_promotion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/PromotionGO')]",
				"[concat(variables('workspaceId'), '/datasets/fact_promotion_go')]",
				"[concat(variables('workspaceId'), '/datasets/DWH_promotion')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sourceTdatalake_achrm')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_qyl",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_qyl",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "fsngroup6/ACHRM/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "lsconnection",
												"type": "LinkedServiceReference"
											},
											"path": "fsngroup6/staging/achrm"
										},
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "lsconnection",
													"type": "LinkedServiceReference"
												},
												"path": "fsngroup6/logging/achrm"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_qyl",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_qyl",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "achrm_bonus"
								},
								"destination": {
									"fileName": "dbo.achrm_bonus.parquet"
								}
							},
							{
								"source": {
									"table": "achrm_department"
								},
								"destination": {
									"fileName": "dbo.achrm_department.parquet"
								}
							},
							{
								"source": {
									"table": "achrm_employee"
								},
								"destination": {
									"fileName": "dbo.achrm_employee.parquet"
								}
							},
							{
								"source": {
									"table": "achrm_job"
								},
								"destination": {
									"fileName": "dbo.achrm_job.parquet"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-10-21T10:58:01Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_qyl')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_qyl')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sourceTdatalake_anc')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_qq9",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_qq9",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "fsngroup6/ANC/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "lsconnection",
												"type": "LinkedServiceReference"
											},
											"path": "fsngroup6/staging/anc"
										},
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "lsconnection",
													"type": "LinkedServiceReference"
												},
												"path": "fsngroup6/logging/anc"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_qq9",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_qq9",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "anc_customer"
								},
								"destination": {
									"fileName": "dbo.anc_customer.parquet"
								}
							},
							{
								"source": {
									"table": "anc_department"
								},
								"destination": {
									"fileName": "dbo.anc_department.parquet"
								}
							},
							{
								"source": {
									"table": "anc_employee"
								},
								"destination": {
									"fileName": "dbo.anc_employee.parquet"
								}
							},
							{
								"source": {
									"table": "anc_fin_code"
								},
								"destination": {
									"fileName": "dbo.anc_fin_code.parquet"
								}
							},
							{
								"source": {
									"table": "anc_product"
								},
								"destination": {
									"fileName": "dbo.anc_product.parquet"
								}
							},
							{
								"source": {
									"table": "anc_sales_order"
								},
								"destination": {
									"fileName": "dbo.anc_sales_order.parquet"
								}
							},
							{
								"source": {
									"table": "anc_sales_order_item"
								},
								"destination": {
									"fileName": "dbo.anc_sales_order_item.parquet"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-10-21T11:00:18Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_qq9')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_qq9')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sourceTdatalake_godb')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_507",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_507",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "fsngroup6/GO/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "lsconnection",
												"type": "LinkedServiceReference"
											},
											"path": "fsngroup6/staging/go"
										},
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "lsconnection",
													"type": "LinkedServiceReference"
												},
												"path": "fsngroup6/logging/go"
											}
										},
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_507",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_507",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "go_CAMPAIGN"
								},
								"destination": {
									"fileName": "dbo.go_CAMPAIGN.parquet"
								}
							},
							{
								"source": {
									"table": "go_COUNTRY"
								},
								"destination": {
									"fileName": "dbo.go_COUNTRY.parquet"
								}
							},
							{
								"source": {
									"table": "go_INVENTORY_LEVELS"
								},
								"destination": {
									"fileName": "dbo.go_INVENTORY_LEVELS.parquet"
								}
							},
							{
								"source": {
									"table": "go_ORDER_DETAILS"
								},
								"destination": {
									"fileName": "dbo.go_ORDER_DETAILS.parquet"
								}
							},
							{
								"source": {
									"table": "go_ORDER_HEADER"
								},
								"destination": {
									"fileName": "dbo.go_ORDER_HEADER.parquet"
								}
							},
							{
								"source": {
									"table": "go_ORDER_METHOD"
								},
								"destination": {
									"fileName": "dbo.go_ORDER_METHOD.parquet"
								}
							},
							{
								"source": {
									"table": "go_PRODUCT"
								},
								"destination": {
									"fileName": "dbo.go_PRODUCT.parquet"
								}
							},
							{
								"source": {
									"table": "go_PRODUCT_FORECAST"
								},
								"destination": {
									"fileName": "dbo.go_PRODUCT_FORECAST.parquet"
								}
							},
							{
								"source": {
									"table": "go_PRODUCT_LINE"
								},
								"destination": {
									"fileName": "dbo.go_PRODUCT_LINE.parquet"
								}
							},
							{
								"source": {
									"table": "go_PRODUCT_TYPE"
								},
								"destination": {
									"fileName": "dbo.go_PRODUCT_TYPE.parquet"
								}
							},
							{
								"source": {
									"table": "go_PROMOTION"
								},
								"destination": {
									"fileName": "dbo.go_PROMOTION.parquet"
								}
							},
							{
								"source": {
									"table": "go_RETAILER"
								},
								"destination": {
									"fileName": "dbo.go_RETAILER.parquet"
								}
							},
							{
								"source": {
									"table": "go_RETAILER_SITE"
								},
								"destination": {
									"fileName": "dbo.go_RETAILER_SITE.parquet"
								}
							},
							{
								"source": {
									"table": "go_RETAILER_TYPE"
								},
								"destination": {
									"fileName": "dbo.go_RETAILER_TYPE.parquet"
								}
							},
							{
								"source": {
									"table": "go_RETURN_REASON"
								},
								"destination": {
									"fileName": "dbo.go_RETURN_REASON.parquet"
								}
							},
							{
								"source": {
									"table": "go_RETURNED_ITEM"
								},
								"destination": {
									"fileName": "dbo.go_RETURNED_ITEM.parquet"
								}
							},
							{
								"source": {
									"table": "go_SALES_BRANCH"
								},
								"destination": {
									"fileName": "dbo.go_SALES_BRANCH.parquet"
								}
							},
							{
								"source": {
									"table": "go_SALES_STAFF"
								},
								"destination": {
									"fileName": "dbo.go_SALES_STAFF.parquet"
								}
							},
							{
								"source": {
									"table": "go_SALES_TARGET"
								},
								"destination": {
									"fileName": "dbo.go_SALES_TARGET.parquet"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-10-21T10:52:53Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_507')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_507')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Country')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_COUNTRY.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "COUNTRY_CODE",
						"type": "INT32"
					},
					{
						"name": "COUNTRY",
						"type": "UTF8"
					},
					{
						"name": "LANGUAGE",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DWH_promotion')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PromotionID",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Discount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StartDate",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "EndDateID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ProductID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Fact_PromotionReview"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_507')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_qq9')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_qyl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "ACHRM",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "none",
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\"",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_department.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "dept_id",
						"type": "INT32"
					},
					{
						"name": "dept_name",
						"type": "UTF8"
					},
					{
						"name": "dept_head_id",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fact_inventory.parquet",
						"folderPath": "Fact_inventory_go",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "InventorymanagementID",
						"type": "UTF8"
					},
					{
						"name": "TotalPrice",
						"type": "DOUBLE"
					},
					{
						"name": "Totalamount",
						"type": "INT32"
					},
					{
						"name": "Unitprice",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_507')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_qq9')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_qyl')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ancProduct')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_product.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "description",
						"type": "UTF8"
					},
					{
						"name": "prod_size",
						"type": "UTF8"
					},
					{
						"name": "color",
						"type": "UTF8"
					},
					{
						"name": "quantity",
						"type": "INT32"
					},
					{
						"name": "unit_price",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "picture_name",
						"type": "UTF8"
					},
					{
						"name": "category",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ancSalesorderItems')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_sales_order_item.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "line_id",
						"type": "INT32"
					},
					{
						"name": "prod_id",
						"type": "INT32"
					},
					{
						"name": "quantity",
						"type": "INT32"
					},
					{
						"name": "ship_date",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/anc_Product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_product.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "description",
						"type": "UTF8"
					},
					{
						"name": "prod_size",
						"type": "UTF8"
					},
					{
						"name": "color",
						"type": "UTF8"
					},
					{
						"name": "quantity",
						"type": "INT32"
					},
					{
						"name": "unit_price",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "picture_name",
						"type": "UTF8"
					},
					{
						"name": "category",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/anc_customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_customer.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "fname",
						"type": "UTF8"
					},
					{
						"name": "lname",
						"type": "UTF8"
					},
					{
						"name": "address",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "zip",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "company_name",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "discount",
						"type": "INT32"
					},
					{
						"name": "max_quantity_order",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/anc_employee')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_employee.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "INT32"
					},
					{
						"name": "manager_id",
						"type": "INT32"
					},
					{
						"name": "emp_fname",
						"type": "UTF8"
					},
					{
						"name": "emp_lname",
						"type": "UTF8"
					},
					{
						"name": "dept_id",
						"type": "INT32"
					},
					{
						"name": "street",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "zip_code",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "ss_number",
						"type": "UTF8"
					},
					{
						"name": "salary",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "start_date",
						"type": "INT96"
					},
					{
						"name": "termination_date",
						"type": "UTF8"
					},
					{
						"name": "birth_date",
						"type": "INT96"
					},
					{
						"name": "bene_health_ins",
						"type": "UTF8"
					},
					{
						"name": "bene_life_ins",
						"type": "UTF8"
					},
					{
						"name": "bene_day_care",
						"type": "UTF8"
					},
					{
						"name": "sex",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/anc_sales_order')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.anc_sales_order.parquet",
						"folderPath": "ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "cust_id",
						"type": "INT32"
					},
					{
						"name": "order_date",
						"type": "INT96"
					},
					{
						"name": "fin_code_id",
						"type": "UTF8"
					},
					{
						"name": "region",
						"type": "UTF8"
					},
					{
						"name": "sales_rep",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/codeCountry')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "codeCountry_stagging-00001",
						"folderPath": "code_country",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "ADDRESS1",
						"type": "UTF8"
					},
					{
						"name": "ADDRESS2",
						"type": "UTF8"
					},
					{
						"name": "CITY",
						"type": "UTF8"
					},
					{
						"name": "REGION",
						"type": "UTF8"
					},
					{
						"name": "POSTAL_ZONE",
						"type": "UTF8"
					},
					{
						"name": "COUNTRY_CODE",
						"type": "INT32"
					},
					{
						"name": "COUNTRY",
						"type": "UTF8"
					},
					{
						"name": "LANGUAGE",
						"type": "UTF8"
					},
					{
						"name": "Source",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/datalake_location')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_SALES_BRANCH.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "ADDRESS1",
						"type": "UTF8"
					},
					{
						"name": "ADDRESS2",
						"type": "UTF8"
					},
					{
						"name": "CITY",
						"type": "UTF8"
					},
					{
						"name": "REGION",
						"type": "UTF8"
					},
					{
						"name": "POSTAL_ZONE",
						"type": "UTF8"
					},
					{
						"name": "COUNTRY_CODE",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/db_achrm_bonus')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "emp_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bonus_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "bonus_amount",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "achrm_bonus"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/db_anchrm')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "emp_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "manager_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "emp_fname",
						"type": "varchar"
					},
					{
						"name": "emp_lname",
						"type": "varchar"
					},
					{
						"name": "dept_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "street",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "zip_code",
						"type": "varchar"
					},
					{
						"name": "phone",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "ss_number",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 15,
						"scale": 5
					},
					{
						"name": "start_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "termination_date",
						"type": "varchar"
					},
					{
						"name": "birth_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "bene_health_ins",
						"type": "varchar"
					},
					{
						"name": "bene_life_ins",
						"type": "varchar"
					},
					{
						"name": "bene_day_care",
						"type": "varchar"
					},
					{
						"name": "sex",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "achrm_employee"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/db_go_order_details')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ORDER_DETAIL_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ORDER_NUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PRODUCT_NUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QUANTITY",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UNIT_COST",
						"type": "float",
						"precision": 15
					},
					{
						"name": "UNIT_PRICE",
						"type": "float",
						"precision": 15
					},
					{
						"name": "UNIT_SALE_PRICE",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "go_ORDER_DETAILS"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_ANC_customer2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_ANC_customer_stagging-00001.parquet",
						"folderPath": "dim_ANC_customer",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "fname",
						"type": "UTF8"
					},
					{
						"name": "lname",
						"type": "UTF8"
					},
					{
						"name": "address",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "zip",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "company_name",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "discount",
						"type": "INT32"
					},
					{
						"name": "max_quantity_order",
						"type": "INT32"
					},
					{
						"name": "CustomerKey",
						"type": "UTF8"
					},
					{
						"name": "LocationID",
						"type": "UTF8"
					},
					{
						"name": "Adress",
						"type": "UTF8"
					},
					{
						"name": "City",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "State",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_anc_cus')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_anc_Cus_location_stagging-00001.parquet",
						"folderPath": "dimAncCustomer",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "fname",
						"type": "UTF8"
					},
					{
						"name": "lname",
						"type": "UTF8"
					},
					{
						"name": "address",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "zip",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "company_name",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "discount",
						"type": "INT32"
					},
					{
						"name": "max_quantity_order",
						"type": "INT32"
					},
					{
						"name": "LocationID",
						"type": "UTF8"
					},
					{
						"name": "Adress2",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_anc_customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_anc_Cus_location_stagging-00001.parquet",
						"folderPath": "dimAncCustomer",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "fname",
						"type": "UTF8"
					},
					{
						"name": "lname",
						"type": "UTF8"
					},
					{
						"name": "address",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "zip",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "company_name",
						"type": "UTF8"
					},
					{
						"name": "type",
						"type": "UTF8"
					},
					{
						"name": "discount",
						"type": "INT32"
					},
					{
						"name": "max_quantity_order",
						"type": "INT32"
					},
					{
						"name": "LocationID",
						"type": "UTF8"
					},
					{
						"name": "Adress2",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_anc_employee')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_anc_employee_stagging-00001.parquet",
						"folderPath": "dim_anc_employee",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "INT32"
					},
					{
						"name": "manager_id",
						"type": "INT32"
					},
					{
						"name": "emp_fname",
						"type": "UTF8"
					},
					{
						"name": "emp_lname",
						"type": "UTF8"
					},
					{
						"name": "dept_id",
						"type": "INT32"
					},
					{
						"name": "street",
						"type": "UTF8"
					},
					{
						"name": "city",
						"type": "UTF8"
					},
					{
						"name": "state",
						"type": "UTF8"
					},
					{
						"name": "zip_code",
						"type": "UTF8"
					},
					{
						"name": "phone",
						"type": "UTF8"
					},
					{
						"name": "status",
						"type": "UTF8"
					},
					{
						"name": "ss_number",
						"type": "UTF8"
					},
					{
						"name": "salary",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "start_date",
						"type": "INT96"
					},
					{
						"name": "termination_date",
						"type": "UTF8"
					},
					{
						"name": "birth_date",
						"type": "INT96"
					},
					{
						"name": "bene_health_ins",
						"type": "UTF8"
					},
					{
						"name": "bene_life_ins",
						"type": "UTF8"
					},
					{
						"name": "bene_day_care",
						"type": "UTF8"
					},
					{
						"name": "sex",
						"type": "UTF8"
					},
					{
						"name": "dept_name",
						"type": "UTF8"
					},
					{
						"name": "dept_head_id",
						"type": "INT32"
					},
					{
						"name": "EmployeeKey",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_anc_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_AncProduct_stagging-00001.parquet",
						"folderPath": "dim_AncProduct",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "name",
						"type": "UTF8"
					},
					{
						"name": "description",
						"type": "UTF8"
					},
					{
						"name": "prod_size",
						"type": "UTF8"
					},
					{
						"name": "color",
						"type": "UTF8"
					},
					{
						"name": "quantity",
						"type": "INT32"
					},
					{
						"name": "unit_price",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "picture_name",
						"type": "UTF8"
					},
					{
						"name": "category",
						"type": "UTF8"
					},
					{
						"name": "Source",
						"type": "UTF8"
					},
					{
						"name": "ProductKey",
						"type": "UTF8"
					},
					{
						"name": "ProductID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_RETAILER_stagging')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_RETAILER.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "RETAILER_CODE",
						"type": "INT32"
					},
					{
						"name": "RETAILER_CODEMR",
						"type": "INT32"
					},
					{
						"name": "COMPANY_NAME",
						"type": "UTF8"
					},
					{
						"name": "RETAILER_TYPE_CODE",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_RETAILER.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "RETAILER_CODE",
						"type": "INT32"
					},
					{
						"name": "RETAILER_CODEMR",
						"type": "INT32"
					},
					{
						"name": "COMPANY_NAME",
						"type": "UTF8"
					},
					{
						"name": "RETAILER_TYPE_CODE",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_customer2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_go_customer_stagging-00001.parquet",
						"folderPath": "dim_go_customer",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "RETAILER_CODE",
						"type": "INT32"
					},
					{
						"name": "RETAILER_CODEMR",
						"type": "INT32"
					},
					{
						"name": "COMPANY_NAME",
						"type": "UTF8"
					},
					{
						"name": "RETAILER_TYPE_CODE",
						"type": "INT32"
					},
					{
						"name": "CustomerKey",
						"type": "UTF8"
					},
					{
						"name": "CustomerLocation",
						"type": "INT32"
					},
					{
						"name": "Discount",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_employee')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_go_employee_stagging-00001.parquet",
						"folderPath": "dim_goEmployee",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SALES_STAFF_CODE",
						"type": "INT32"
					},
					{
						"name": "FIRST_NAME",
						"type": "UTF8"
					},
					{
						"name": "LAST_NAME",
						"type": "UTF8"
					},
					{
						"name": "POSITION_EN",
						"type": "UTF8"
					},
					{
						"name": "WORK_PHONE",
						"type": "UTF8"
					},
					{
						"name": "EXTENSION",
						"type": "UTF8"
					},
					{
						"name": "FAX",
						"type": "UTF8"
					},
					{
						"name": "EMAIL",
						"type": "UTF8"
					},
					{
						"name": "DATE_HIRED",
						"type": "INT96"
					},
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "MANAGER_CODE",
						"type": "INT32"
					},
					{
						"name": "EmployeeKey",
						"type": "UTF8"
					},
					{
						"name": "Department",
						"type": "UTF8"
					},
					{
						"name": "Employeestatus",
						"type": "UTF8"
					},
					{
						"name": "Enddate",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_location')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_go_location_stagging-00001.parquet",
						"folderPath": "dim_go_location",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "ADDRESS1",
						"type": "UTF8"
					},
					{
						"name": "ADDRESS2",
						"type": "UTF8"
					},
					{
						"name": "CITY",
						"type": "UTF8"
					},
					{
						"name": "REGION",
						"type": "UTF8"
					},
					{
						"name": "POSTAL_ZONE",
						"type": "UTF8"
					},
					{
						"name": "COUNTRY_CODE",
						"type": "INT32"
					},
					{
						"name": "COUNTRY",
						"type": "UTF8"
					},
					{
						"name": "LANGUAGE",
						"type": "UTF8"
					},
					{
						"name": "LocationID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_goProduct_stagging-00001.parquet",
						"folderPath": "dim_goProduct",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PRODUCT_NUMBER",
						"type": "INT32"
					},
					{
						"name": "INTRODUCTION_DATE",
						"type": "INT96"
					},
					{
						"name": "PRODUCT_TYPE_CODE",
						"type": "INT32"
					},
					{
						"name": "PRODUCTION_COST",
						"type": "DOUBLE"
					},
					{
						"name": "MARGIN",
						"type": "DOUBLE"
					},
					{
						"name": "PRODUCT_IMAGE",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT_NAME",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT_LINE_CODE",
						"type": "INT32"
					},
					{
						"name": "PRODUCT_TYPE_EN",
						"type": "UTF8"
					},
					{
						"name": "Source",
						"type": "UTF8"
					},
					{
						"name": "ProductID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_go_promotion')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_PROMOTION.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PR_NUMBER",
						"type": "INT32"
					},
					{
						"name": "DATE_START",
						"type": "INT96"
					},
					{
						"name": "DATE_END",
						"type": "INT96"
					},
					{
						"name": "DESCRIPTION",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_product_anc')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "varchar"
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productname",
						"type": "varchar"
					},
					{
						"name": "Producttype",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productioncost",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Productcode",
						"type": "varchar"
					},
					{
						"name": "Productcatagory",
						"type": "varchar"
					},
					{
						"name": "Productdescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_product_go')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "varchar"
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productname",
						"type": "varchar"
					},
					{
						"name": "Producttype",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productioncost",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productcode",
						"type": "varchar"
					},
					{
						"name": "Productcatagory",
						"type": "varchar"
					},
					{
						"name": "Productdescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_anc_employee')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employeekey",
						"type": "varchar"
					},
					{
						"name": "EployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DepartmentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Firstname",
						"type": "varchar"
					},
					{
						"name": "Lastname",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "varchar"
					},
					{
						"name": "Employeestatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Startdate",
						"type": "date"
					},
					{
						"name": "Enddate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_dim_employee_go')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Employeekey",
						"type": "varchar"
					},
					{
						"name": "EployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DepartmentID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Firstname",
						"type": "varchar"
					},
					{
						"name": "Lastname",
						"type": "varchar"
					},
					{
						"name": "Department",
						"type": "varchar"
					},
					{
						"name": "Employeestatus",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Startdate",
						"type": "date"
					},
					{
						"name": "Enddate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_dim_location')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LocationID",
						"type": "varchar"
					},
					{
						"name": "Adress",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Location"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_dim_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "varchar"
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productname",
						"type": "varchar"
					},
					{
						"name": "Producttype",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productioncost",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Productcode",
						"type": "varchar"
					},
					{
						"name": "Productcatagory",
						"type": "varchar"
					},
					{
						"name": "Productdescription",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_fact_Salesorder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesorderID",
						"type": "varchar"
					},
					{
						"name": "DIM_ProductProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_DateDateID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DIM_CustomerCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_SalesLocation",
						"type": "varchar"
					},
					{
						"name": "DIM_EmployeeEmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Discount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_EmployeeEmployeeKkey",
						"type": "varchar"
					},
					{
						"name": "DIM_CustomerCustomerKey",
						"type": "varchar"
					},
					{
						"name": "DIM_ProductProductKey",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_Salesorder"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_fact_salary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fact_salary_ANC.parquet",
						"folderPath": "fact_salary_ANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "salary",
						"type": "DECIMAL",
						"precision": 15,
						"scale": 5
					},
					{
						"name": "bonus_amount",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SalarypaymentID",
						"type": "UTF8"
					},
					{
						"name": "LocationID",
						"type": "UTF8"
					},
					{
						"name": "DateID",
						"type": "INT32"
					},
					{
						"name": "EmployeelID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_fact_salseorder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesorderID",
						"type": "varchar"
					},
					{
						"name": "DIM_ProductProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_DateDateID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DIM_CustomerCustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_SalesLocation",
						"type": "varchar"
					},
					{
						"name": "DIM_EmployeeEmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Discount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_EmployeeEmployeeKkey",
						"type": "varchar"
					},
					{
						"name": "DIM_CustomerCustomerKey",
						"type": "varchar"
					},
					{
						"name": "DIM_ProductProductKey",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_Salesorder"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_go_customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "varchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DIM_Customerlocation",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Discount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Companyname",
						"type": "varchar"
					},
					{
						"name": "Customeradress",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DIM_Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_intvantory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_Inventorymanagement"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_salary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalarypaymentID",
						"type": "varchar"
					},
					{
						"name": "DIM_LocationLocationID",
						"type": "varchar"
					},
					{
						"name": "DIM_EmployeeEmployeekey",
						"type": "varchar"
					},
					{
						"name": "DIM_DateDateID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Bonus",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FACT_Salarypayment"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dwh_verkopen')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LocationID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Address",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "State",
						"type": "nvarchar"
					},
					{
						"name": "Source",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Location"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fact_anc_int')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fact_anc_inventory.parquet",
						"folderPath": "fact_anc_inventory",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "InventorymanagementID",
						"type": "UTF8"
					},
					{
						"name": "TotalPrice",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 0
					},
					{
						"name": "Totalamount",
						"type": "INT32"
					},
					{
						"name": "Unitprice",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "DIM_DateID",
						"type": "INT32"
					},
					{
						"name": "DIM_ProductProductID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fact_promotion_go')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Fact_Promotion_GO.parquet",
						"folderPath": "Fact_Promotion_GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PR_NUMBER",
						"type": "INT32"
					},
					{
						"name": "DATE_START",
						"type": "INT96"
					},
					{
						"name": "DATE_END",
						"type": "INT96"
					},
					{
						"name": "DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT_NUMBER",
						"type": "INT32"
					},
					{
						"name": "DISCOUNT",
						"type": "FLOAT"
					},
					{
						"name": "PROMOTIONID",
						"type": "UTF8"
					},
					{
						"name": "StartDate",
						"type": "INT32"
					},
					{
						"name": "EndDateID",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fact_salesorder_ANC')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fact_SalesorderANC.parquet",
						"folderPath": "fact_SalesorderANC",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "emp_id",
						"type": "INT32"
					},
					{
						"name": "bonus_date",
						"type": "INT96"
					},
					{
						"name": "bonus_amount",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 0
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fact_salseorder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fact_salesorder_stagging.parquet",
						"folderPath": "fact_Salesorder",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ORDER_DETAIL_CODE",
						"type": "INT32"
					},
					{
						"name": "ORDER_NUMBER",
						"type": "INT32"
					},
					{
						"name": "PRODUCT_NUMBER",
						"type": "INT32"
					},
					{
						"name": "QUANTITY",
						"type": "INT32"
					},
					{
						"name": "UNIT_COST",
						"type": "DOUBLE"
					},
					{
						"name": "UNIT_PRICE",
						"type": "DOUBLE"
					},
					{
						"name": "UNIT_SALE_PRICE",
						"type": "DOUBLE"
					},
					{
						"name": "LineTotal",
						"type": "DOUBLE"
					},
					{
						"name": "DiscountUnitPrice",
						"type": "DOUBLE"
					},
					{
						"name": "ActualUnitPrice",
						"type": "DOUBLE"
					},
					{
						"name": "RETAILER_NAME",
						"type": "UTF8"
					},
					{
						"name": "RETAILER_SITE_CODE",
						"type": "INT32"
					},
					{
						"name": "RETAILER_COUNTACT_CODE",
						"type": "INT32"
					},
					{
						"name": "SALES_STAFF_CODE",
						"type": "INT32"
					},
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "ORDER_DATE",
						"type": "INT96"
					},
					{
						"name": "ORDER_METHOD_CODE",
						"type": "INT32"
					},
					{
						"name": "Employeekey",
						"type": "UTF8"
					},
					{
						"name": "DateID",
						"type": "INT32"
					},
					{
						"name": "SalesorderID",
						"type": "UTF8"
					},
					{
						"name": "EployeeID",
						"type": "INT32"
					},
					{
						"name": "DepartmentID",
						"type": "INT32"
					},
					{
						"name": "Firstname",
						"type": "UTF8"
					},
					{
						"name": "Lastname",
						"type": "UTF8"
					},
					{
						"name": "Department",
						"type": "UTF8"
					},
					{
						"name": "Employeestatus",
						"type": "INT32"
					},
					{
						"name": "Startdate",
						"type": "DATE"
					},
					{
						"name": "Enddate",
						"type": "DATE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/goProductType')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_PRODUCT_TYPE.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PRODUCT_TYPE_CODE",
						"type": "INT32"
					},
					{
						"name": "PRODUCT_LINE_CODE",
						"type": "INT32"
					},
					{
						"name": "PRODUCT_TYPE_EN",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_Campaign')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_CAMPAIGN.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PR_NUMBER",
						"type": "INT32"
					},
					{
						"name": "PRODUCT_NUMBER",
						"type": "INT32"
					},
					{
						"name": "DISCOUNT",
						"type": "FLOAT"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_inventory_level')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_INVENTORY_LEVELS.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "INVENTORY_YEAR",
						"type": "INT32"
					},
					{
						"name": "INVENTORY_MONTH",
						"type": "INT32"
					},
					{
						"name": "PRODUCT_NUMBER",
						"type": "INT32"
					},
					{
						"name": "INVENTORY_COUNT",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_order_header')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sourcedb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ORDER_NUMBER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RETAILER_NAME",
						"type": "nvarchar"
					},
					{
						"name": "RETAILER_SITE_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RETAILER_COUNTACT_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SALES_STAFF_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SALES_BRANCH_CODE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ORDER_DATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ORDER_METHOD_CODE",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "go_ORDER_HEADER"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sourcedb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_PRODUCT.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "PRODUCT_NUMBER",
						"type": "INT32"
					},
					{
						"name": "INTRODUCTION_DATE",
						"type": "INT96"
					},
					{
						"name": "PRODUCT_TYPE_CODE",
						"type": "INT32"
					},
					{
						"name": "PRODUCTION_COST",
						"type": "DOUBLE"
					},
					{
						"name": "MARGIN",
						"type": "DOUBLE"
					},
					{
						"name": "PRODUCT_IMAGE",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT_NAME",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_sales_branch')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_SALES_BRANCH.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "ADDRESS1",
						"type": "UTF8"
					},
					{
						"name": "ADDRESS2",
						"type": "UTF8"
					},
					{
						"name": "CITY",
						"type": "UTF8"
					},
					{
						"name": "REGION",
						"type": "UTF8"
					},
					{
						"name": "POSTAL_ZONE",
						"type": "UTF8"
					},
					{
						"name": "COUNTRY_CODE",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_sales_staff')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsconnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.go_SALES_STAFF.parquet",
						"folderPath": "GO",
						"fileSystem": "fsngroup6"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SALES_STAFF_CODE",
						"type": "INT32"
					},
					{
						"name": "FIRST_NAME",
						"type": "UTF8"
					},
					{
						"name": "LAST_NAME",
						"type": "UTF8"
					},
					{
						"name": "POSITION_EN",
						"type": "UTF8"
					},
					{
						"name": "WORK_PHONE",
						"type": "UTF8"
					},
					{
						"name": "EXTENSION",
						"type": "UTF8"
					},
					{
						"name": "FAX",
						"type": "UTF8"
					},
					{
						"name": "EMAIL",
						"type": "UTF8"
					},
					{
						"name": "DATE_HIRED",
						"type": "INT96"
					},
					{
						"name": "SALES_BRANCH_CODE",
						"type": "INT32"
					},
					{
						"name": "MANAGER_CODE",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureTableStorageGo')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureTableStorageGo_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DWH')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DWH_properties_typeProperties_server')]",
					"database": "[parameters('DWH_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DWH_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DWH_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/lsconnection')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsconnection_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsconnection_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sourcedb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sourcedb_properties_typeProperties_server')]",
					"database": "[parameters('sourcedb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sourcedb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sourcedb_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syngroup6-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('syngroup6-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syngroup6-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('syngroup6-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger go db')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "sourceTdatalake_godb",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "sourceTdatalake_anc",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "sourceTdatalake_achrm",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2024-11-07T03:05:00",
						"timeZone": "W. Europe Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/sourceTdatalake_godb')]",
				"[concat(variables('workspaceId'), '/pipelines/sourceTdatalake_anc')]",
				"[concat(variables('workspaceId'), '/pipelines/sourceTdatalake_achrm')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger to dwh')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "datalake_To_DWH_Dim_product",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "datalake_To_DWH_Dim_Location",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "datalake_To_DWH_Dim_employee",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 24,
						"startTime": "2024-11-07T04:08:00",
						"timeZone": "W. Europe Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/datalake_To_DWH_Dim_product')]",
				"[concat(variables('workspaceId'), '/pipelines/datalake_To_DWH_Dim_Location')]",
				"[concat(variables('workspaceId'), '/pipelines/datalake_To_DWH_Dim_employee')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Fact_Inventory')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "go_inventory_level",
								"type": "DatasetReference"
							},
							"name": "goInventoryLevel"
						},
						{
							"dataset": {
								"referenceName": "dim_anc_product",
								"type": "DatasetReference"
							},
							"name": "ancProduct"
						},
						{
							"dataset": {
								"referenceName": "dim_go_product",
								"type": "DatasetReference"
							},
							"name": "goProduct"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "GOINVENTORY"
						},
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "factIntventoryANC"
						}
					],
					"transformations": [
						{
							"name": "join1PRODUCT"
						},
						{
							"name": "ADDKEY"
						},
						{
							"name": "SINK"
						},
						{
							"name": "ancIntventory"
						},
						{
							"name": "selectfact"
						}
					],
					"scriptLines": [
						"source(output(",
						"          INVENTORY_YEAR as integer,",
						"          INVENTORY_MONTH as integer,",
						"          PRODUCT_NUMBER as integer,",
						"          INVENTORY_COUNT as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goInventoryLevel",
						"source(output(",
						"          id as integer,",
						"          name as string,",
						"          description as string,",
						"          prod_size as string,",
						"          color as string,",
						"          quantity as integer,",
						"          unit_price as decimal(18,0),",
						"          picture_name as string,",
						"          category as string,",
						"          Source as string,",
						"          ProductKey as string,",
						"          ProductID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancProduct",
						"source(output(",
						"          PRODUCT_NUMBER as integer,",
						"          INTRODUCTION_DATE as timestamp,",
						"          PRODUCT_TYPE_CODE as integer,",
						"          PRODUCTION_COST as double,",
						"          MARGIN as double,",
						"          PRODUCT_IMAGE as string,",
						"          PRODUCT_NAME as string,",
						"          PRODUCT_LINE_CODE as integer,",
						"          PRODUCT_TYPE_EN as string,",
						"          Source as string,",
						"          ProductID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goProduct",
						"goInventoryLevel, goProduct join(goInventoryLevel@PRODUCT_NUMBER == goProduct@PRODUCT_NUMBER,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1PRODUCT",
						"join1PRODUCT derive(InventorymanagementID = concatWS('_', concatWS('_', concatWS('_', toString(goInventoryLevel@PRODUCT_NUMBER), toString(INVENTORY_YEAR)), toString(INVENTORY_MONTH)),\"GO\"),",
						"          TotalPrice = PRODUCTION_COST*INVENTORY_COUNT,",
						"          Totalamount = INVENTORY_COUNT,",
						"          Unitprice = PRODUCTION_COST,",
						"          DateID = toDate(INTRODUCTION_DATE) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          DIM_Product = concatWS('_', ProductID, \"GO\")) ~> ADDKEY",
						"ADDKEY select(mapColumn(",
						"          InventorymanagementID,",
						"          TotalPrice,",
						"          Totalamount,",
						"          Unitprice,",
						"          DIM_DateID = DateID,",
						"          DIM_ProductProductID = DIM_Product",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SINK",
						"ancProduct derive(InventorymanagementID = concatWS('_', toString(id), \"ANC\"),",
						"          TotalPrice = unit_price*quantity,",
						"          Totalamount = quantity,",
						"          Unitprice = unit_price,",
						"          DIM_DateID = 7305,",
						"          DIM_ProductProductID = ProductKey) ~> ancIntventory",
						"ancIntventory select(mapColumn(",
						"          InventorymanagementID,",
						"          TotalPrice,",
						"          Totalamount,",
						"          Unitprice,",
						"          DIM_DateID,",
						"          DIM_ProductProductID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectfact",
						"SINK sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'Fact_inventory_go',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['fact_inventory.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> GOINVENTORY",
						"selectfact sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'fact_anc_inventory',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['fact_anc_inventory.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> factIntventoryANC"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/go_inventory_level')]",
				"[concat(variables('workspaceId'), '/datasets/dim_anc_product')]",
				"[concat(variables('workspaceId'), '/datasets/dim_go_product')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PromotionGO')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dim_go_promotion",
								"type": "DatasetReference"
							},
							"name": "goPromotion"
						},
						{
							"dataset": {
								"referenceName": "go_Campaign",
								"type": "DatasetReference"
							},
							"name": "goCampaign"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "sinkFactPromotionReview"
						}
					],
					"transformations": [
						{
							"name": "join1campaign"
						},
						{
							"name": "addColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PR_NUMBER as integer,",
						"          DATE_START as timestamp,",
						"          DATE_END as timestamp,",
						"          DESCRIPTION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goPromotion",
						"source(output(",
						"          PR_NUMBER as integer,",
						"          PRODUCT_NUMBER as integer,",
						"          DISCOUNT as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goCampaign",
						"goPromotion, goCampaign join(goPromotion@PR_NUMBER == goCampaign@PR_NUMBER,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1campaign",
						"join1campaign derive(PROMOTIONID = concatWS('_', toString(PRODUCT_NUMBER), toString(toDate(DATE_START))),",
						"          StartDate = toDate(DATE_START) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          EndDateID = toDate(DATE_END) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          ProductKey = concatWS('_', toString(PRODUCT_NUMBER), 'GO')) ~> addColumns",
						"addColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'Fact_Promotion_GO',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['Fact_Promotion_GO.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkFactPromotionReview"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dim_go_promotion')]",
				"[concat(variables('workspaceId'), '/datasets/go_Campaign')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_employee')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "go_sales_staff",
								"type": "DatasetReference"
							},
							"name": "go"
						},
						{
							"dataset": {
								"referenceName": "anc_employee",
								"type": "DatasetReference"
							},
							"name": "anc"
						},
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "ancDepartment"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "GoDimEmployee"
						},
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "ANCDimEmployee"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "mappingANC"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SALES_STAFF_CODE as integer,",
						"          FIRST_NAME as string,",
						"          LAST_NAME as string,",
						"          POSITION_EN as string,",
						"          WORK_PHONE as string,",
						"          EXTENSION as string,",
						"          FAX as string,",
						"          EMAIL as string,",
						"          DATE_HIRED as timestamp,",
						"          SALES_BRANCH_CODE as integer,",
						"          MANAGER_CODE as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> go",
						"source(output(",
						"          emp_id as integer,",
						"          manager_id as integer,",
						"          emp_fname as string,",
						"          emp_lname as string,",
						"          dept_id as integer,",
						"          street as string,",
						"          city as string,",
						"          state as string,",
						"          zip_code as string,",
						"          phone as string,",
						"          status as string,",
						"          ss_number as string,",
						"          salary as decimal(18,0),",
						"          start_date as timestamp,",
						"          termination_date as string,",
						"          birth_date as timestamp,",
						"          bene_health_ins as string,",
						"          bene_life_ins as string,",
						"          bene_day_care as string,",
						"          sex as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> anc",
						"source(output(",
						"          dept_id as integer,",
						"          dept_name as string,",
						"          dept_head_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancDepartment",
						"go derive(EmployeeKey = concatWS(\"_\", toString(SALES_STAFF_CODE), \"GO\"),",
						"          Department = '',",
						"          Employeestatus = '',",
						"          Enddate = toDate(''),",
						"          DATE_HIRED = toDate(DATE_HIRED)) ~> derivedColumn1",
						"anc, ancDepartment join(anc@dept_id == ancDepartment@dept_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> mappingANC",
						"mappingANC derive(EmployeeKey = concatWS('_', toString(emp_id), 'ANC'),",
						"          start_date = toDate(start_date),",
						"          termination_date = toDate(termination_date),",
						"          LocationID = concatWS('_', toString(emp_id), 'ANC'),",
						"          Country = '') ~> derivedColumn2",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_goEmployee',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     filePattern:'dim_go_employee_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> GoDimEmployee",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_anc_employee',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     filePattern:'dim_anc_employee_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ANCDimEmployee"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/go_sales_staff')]",
				"[concat(variables('workspaceId'), '/datasets/anc_employee')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/factCampaign')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dim_go_promotion",
								"type": "DatasetReference"
							},
							"name": "goPromotion"
						},
						{
							"dataset": {
								"referenceName": "go_Campaign",
								"type": "DatasetReference"
							},
							"name": "goCampaign"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "sinkFactPromotionReview"
						}
					],
					"transformations": [
						{
							"name": "join1campaign"
						},
						{
							"name": "addColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PR_NUMBER as integer,",
						"          DATE_START as timestamp,",
						"          DATE_END as timestamp,",
						"          DESCRIPTION as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goPromotion",
						"source(output(",
						"          PR_NUMBER as integer,",
						"          PRODUCT_NUMBER as integer,",
						"          DISCOUNT as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goCampaign",
						"goPromotion, goCampaign join(goPromotion@PR_NUMBER == goCampaign@PR_NUMBER,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1campaign",
						"join1campaign derive(PROMOTIONID = concatWS('_', toString(PRODUCT_NUMBER), 'GO'),",
						"          StartDate = toDate(DATE_START) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          EndDateID = toDate(DATE_END) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd'))) ~> addColumns",
						"addColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'Fact_Promotion_GO',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['Fact_Promotion_GO.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinkFactPromotionReview"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dim_go_promotion')]",
				"[concat(variables('workspaceId'), '/datasets/go_Campaign')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/go_Product')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "go_product",
								"type": "DatasetReference"
							},
							"name": "go"
						},
						{
							"dataset": {
								"referenceName": "goProductType",
								"type": "DatasetReference"
							},
							"name": "goProductType"
						},
						{
							"dataset": {
								"referenceName": "ancProduct",
								"type": "DatasetReference"
							},
							"name": "ancProduct"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "goProduct",
							"rejectedDataLinkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							}
						},
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "dimAncProduct"
						}
					],
					"transformations": [
						{
							"name": "joinProductProductType"
						},
						{
							"name": "addSourceColumn"
						},
						{
							"name": "mappingIDSource"
						},
						{
							"name": "addSourceColumn2"
						},
						{
							"name": "mappingIDSource2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PRODUCT_NUMBER as integer,",
						"          INTRODUCTION_DATE as timestamp,",
						"          PRODUCT_TYPE_CODE as integer,",
						"          PRODUCTION_COST as double,",
						"          MARGIN as double,",
						"          PRODUCT_IMAGE as string,",
						"          PRODUCT_NAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> go",
						"source(output(",
						"          PRODUCT_TYPE_CODE as integer,",
						"          PRODUCT_LINE_CODE as integer,",
						"          PRODUCT_TYPE_EN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goProductType",
						"source(output(",
						"          id as integer,",
						"          name as string,",
						"          description as string,",
						"          prod_size as string,",
						"          color as string,",
						"          quantity as integer,",
						"          unit_price as decimal(18,0),",
						"          picture_name as string,",
						"          category as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancProduct",
						"go, goProductType join(go@PRODUCT_TYPE_CODE == goProductType@PRODUCT_TYPE_CODE,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinProductProductType",
						"joinProductProductType derive(Source = 'GO') ~> addSourceColumn",
						"addSourceColumn derive(ProductKey = concatWS('_',toString(PRODUCT_NUMBER),Source),",
						"          ProductID = PRODUCT_NUMBER,",
						"          productdescription = '') ~> mappingIDSource",
						"ancProduct derive(Source = 'ANC') ~> addSourceColumn2",
						"addSourceColumn2 derive(ProductKey = concatWS(\"_\", toString(id), Source),",
						"          ProductID = id,",
						"          productioncost = 0,",
						"          Producttype = 0) ~> mappingIDSource2",
						"mappingIDSource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_goProduct',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     filePattern:'dim_goProduct_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> goProduct",
						"mappingIDSource2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_AncProduct',",
						"     truncate: true,",
						"     filePattern:'dim_AncProduct_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> dimAncProduct"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/go_product')]",
				"[concat(variables('workspaceId'), '/datasets/goProductType')]",
				"[concat(variables('workspaceId'), '/datasets/ancProduct')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mapping salary')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "db_anchrm",
								"type": "DatasetReference"
							},
							"name": "achrmEmployee"
						},
						{
							"dataset": {
								"referenceName": "db_achrm_bonus",
								"type": "DatasetReference"
							},
							"name": "achrmBonus"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "factSalary"
						}
					],
					"transformations": [
						{
							"name": "join1bonus"
						},
						{
							"name": "select1bonus"
						},
						{
							"name": "addColumns"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp_id as integer,",
						"          manager_id as integer,",
						"          emp_fname as string,",
						"          emp_lname as string,",
						"          dept_id as integer,",
						"          street as string,",
						"          city as string,",
						"          state as string,",
						"          zip_code as string,",
						"          phone as string,",
						"          status as string,",
						"          ss_number as string,",
						"          salary as decimal(15,5),",
						"          start_date as timestamp,",
						"          termination_date as string,",
						"          birth_date as timestamp,",
						"          bene_health_ins as string,",
						"          bene_life_ins as string,",
						"          bene_day_care as string,",
						"          sex as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> achrmEmployee",
						"source(output(",
						"          emp_id as integer,",
						"          bonus_date as timestamp,",
						"          bonus_amount as decimal(18,0)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> achrmBonus",
						"achrmEmployee, achrmBonus join(achrmEmployee@emp_id == achrmBonus@emp_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1bonus",
						"join1bonus select(mapColumn(",
						"          emp_id = achrmEmployee@emp_id,",
						"          dept_id,",
						"          salary,",
						"          start_date,",
						"          bonus_date,",
						"          bonus_amount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1bonus",
						"select1bonus derive(SalarypaymentID = concatWS('_', concatWS('_', toString(emp_id), toString(toDate(start_date))), toString(toDate(bonus_date))),",
						"          LocationID = concatWS('_', toString(emp_id), '_ANC_EMPLOYEE'),",
						"          DateID = toDate(iif(isNull(bonus_date), start_date, bonus_date)) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          EmployeelID = concatWS('_', toString(emp_id), 'ANC'),",
						"          Bonus = iif(isNull(bonus_amount), toDecimal(0), bonus_amount)) ~> addColumns",
						"addColumns select(mapColumn(",
						"          salary,",
						"          SalarypaymentID,",
						"          LocationID,",
						"          DateID,",
						"          EmployeelID,",
						"          Bonus",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'fact_salary_ANC',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['fact_salary_ANC.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> factSalary"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/db_anchrm')]",
				"[concat(variables('workspaceId'), '/datasets/db_achrm_bonus')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mapping_country')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "go_sales_branch",
								"type": "DatasetReference"
							},
							"name": "goSalesBranch"
						},
						{
							"dataset": {
								"referenceName": "Country",
								"type": "DatasetReference"
							},
							"name": "country"
						},
						{
							"dataset": {
								"referenceName": "anc_customer",
								"type": "DatasetReference"
							},
							"name": "ancCustomer"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "dimGoLocation"
						},
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "dimAncCustomer"
						}
					],
					"transformations": [
						{
							"name": "joinCountry"
						},
						{
							"name": "mappingDimLoacation"
						},
						{
							"name": "mappingANCcustomer"
						}
					],
					"scriptLines": [
						"parameters{",
						"     go as string ('go')",
						"}",
						"source(output(",
						"          SALES_BRANCH_CODE as integer,",
						"          ADDRESS1 as string,",
						"          ADDRESS2 as string,",
						"          CITY as string,",
						"          REGION as string,",
						"          POSTAL_ZONE as string,",
						"          COUNTRY_CODE as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goSalesBranch",
						"source(output(",
						"          COUNTRY_CODE as integer,",
						"          COUNTRY as string,",
						"          LANGUAGE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> country",
						"source(output(",
						"          id as integer,",
						"          fname as string,",
						"          lname as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          zip as string,",
						"          phone as string,",
						"          company_name as string,",
						"          type as string,",
						"          discount as integer,",
						"          max_quantity_order as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancCustomer",
						"goSalesBranch, country join(goSalesBranch@COUNTRY_CODE == country@COUNTRY_CODE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinCountry",
						"joinCountry derive(LocationID = concatWS('_', toString(SALES_BRANCH_CODE), 'GO')) ~> mappingDimLoacation",
						"ancCustomer derive(LocationID = concatWS('_', toString(id), 'ANC'),",
						"          Adress2 = '',",
						"          Country = '') ~> mappingANCcustomer",
						"mappingDimLoacation sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_go_location',",
						"     truncate: true,",
						"     filePattern:'dim_go_location_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> dimGoLocation",
						"mappingANCcustomer sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dimAncCustomer',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     filePattern:'dim_anc_Cus_location_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> dimAncCustomer"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/go_sales_branch')]",
				"[concat(variables('workspaceId'), '/datasets/Country')]",
				"[concat(variables('workspaceId'), '/datasets/anc_customer')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mapping_customer')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dim_go_RETAILER_stagging",
								"type": "DatasetReference"
							},
							"name": "goCustomer"
						},
						{
							"dataset": {
								"referenceName": "dwh_dim_location",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "anc_customer",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "dimGoCustomer"
						},
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "join2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          RETAILER_CODE as integer,",
						"          RETAILER_CODEMR as integer,",
						"          COMPANY_NAME as string,",
						"          RETAILER_TYPE_CODE as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> goCustomer",
						"source(output(",
						"          LocationID as string,",
						"          Adress as string,",
						"          City as string,",
						"          Country as string,",
						"          State as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          id as integer,",
						"          fname as string,",
						"          lname as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          zip as string,",
						"          phone as string,",
						"          company_name as string,",
						"          type as string,",
						"          discount as integer,",
						"          max_quantity_order as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source2",
						"goCustomer derive(CustomerKey = concatWS('_', toString(RETAILER_CODE), \"GO\"),",
						"          CustomerLocation = concatWS('_', toString(RETAILER_CODE), \"GO\"),",
						"          Discount = 0,",
						"          Name = '') ~> derivedColumn1",
						"source1, derivedColumn1 join(LocationID == CustomerLocation,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"source2 derive(CustomerKey = concatWS('_', toString(id), 'ANC')) ~> derivedColumn2",
						"derivedColumn2, source1 join(CustomerKey == LocationID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_go_customer',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     filePattern:'dim_go_customer_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> dimGoCustomer",
						"join2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'dim_ANC_customer',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     filePattern:'dim_ANC_customer_stagging.parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dim_go_RETAILER_stagging')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_dim_location')]",
				"[concat(variables('workspaceId'), '/datasets/anc_customer')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mapping_fact_salesorder')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dim_product_anc",
								"type": "DatasetReference"
							},
							"name": "ProductID"
						},
						{
							"dataset": {
								"referenceName": "dwh_go_customer",
								"type": "DatasetReference"
							},
							"name": "CustomerID"
						},
						{
							"dataset": {
								"referenceName": "dwh_anc_employee",
								"type": "DatasetReference"
							},
							"name": "EmployeeID"
						},
						{
							"dataset": {
								"referenceName": "db_go_order_details",
								"type": "DatasetReference"
							},
							"name": "orderdetailsGO"
						},
						{
							"dataset": {
								"referenceName": "go_order_header",
								"type": "DatasetReference"
							},
							"name": "orderHeader"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "goDalesorder"
						}
					],
					"transformations": [
						{
							"name": "LineTotal"
						},
						{
							"name": "joinOrderHeader"
						},
						{
							"name": "EmployeelKey"
						},
						{
							"name": "joinEmployeelID"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductKey as string,",
						"          ProductID as integer,",
						"          Productname as string,",
						"          Producttype as integer,",
						"          Productioncost as double,",
						"          Productcode as string,",
						"          Productcatagory as string,",
						"          Productdescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ProductID",
						"source(output(",
						"          CustomerKey as string,",
						"          CustomerID as integer,",
						"          DIM_Customerlocation as string,",
						"          Name as string,",
						"          Discount as integer,",
						"          Companyname as string,",
						"          Customeradress as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> CustomerID",
						"source(output(",
						"          Employeekey as string,",
						"          EployeeID as integer,",
						"          DepartmentID as integer,",
						"          Firstname as string,",
						"          Lastname as string,",
						"          Department as string,",
						"          Employeestatus as integer,",
						"          Startdate as date,",
						"          Enddate as date",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> EmployeeID",
						"source(output(",
						"          ORDER_DETAIL_CODE as integer,",
						"          ORDER_NUMBER as integer,",
						"          PRODUCT_NUMBER as integer,",
						"          QUANTITY as integer,",
						"          UNIT_COST as double,",
						"          UNIT_PRICE as double,",
						"          UNIT_SALE_PRICE as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> orderdetailsGO",
						"source(output(",
						"          ORDER_NUMBER as integer,",
						"          RETAILER_NAME as string,",
						"          RETAILER_SITE_CODE as integer,",
						"          RETAILER_COUNTACT_CODE as integer,",
						"          SALES_STAFF_CODE as integer,",
						"          SALES_BRANCH_CODE as integer,",
						"          ORDER_DATE as timestamp,",
						"          ORDER_METHOD_CODE as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> orderHeader",
						"orderdetailsGO derive(LineTotal = QUANTITY*UNIT_SALE_PRICE,",
						"          DiscountUnitPrice = UNIT_SALE_PRICE,",
						"          ActualUnitPrice = UNIT_SALE_PRICE) ~> LineTotal",
						"LineTotal, orderHeader join(orderdetailsGO@ORDER_NUMBER == orderHeader@ORDER_NUMBER,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinOrderHeader",
						"joinOrderHeader derive(EmployeeKey = concatWS('_', toString(SALES_STAFF_CODE), 'GO'),",
						"          DateID = toDate(ORDER_DATE) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          SalesorderID = concatWS('_', concatWS('_', toString(ORDER_DETAIL_CODE), toString(PRODUCT_NUMBER)), toString(QUANTITY))) ~> EmployeelKey",
						"EmployeelKey, EmployeeID join(EmployeelKey@EmployeeKey == EmployeeID@Employeekey,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinEmployeelID",
						"joinEmployeelID derive(ProductID = concatWS('_', toString(PRODUCT_NUMBER), 'GO'),",
						"          LocationID = concatWS('_', toString(SALES_BRANCH_CODE), 'GO'),",
						"          EmployeeID = EmployeelKey@EmployeeKey,",
						"          CustomerID = '101_ANC') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'fact_Salesorder',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['fact_salesorder_stagging.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> goDalesorder"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/dim_product_anc')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_go_customer')]",
				"[concat(variables('workspaceId'), '/datasets/dwh_anc_employee')]",
				"[concat(variables('workspaceId'), '/datasets/db_go_order_details')]",
				"[concat(variables('workspaceId'), '/datasets/go_order_header')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/salesorder anc')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "anc_sales_order",
								"type": "DatasetReference"
							},
							"name": "ancSalesorder"
						},
						{
							"dataset": {
								"referenceName": "ancSalesorderItems",
								"type": "DatasetReference"
							},
							"name": "ancSalesorderItems"
						},
						{
							"dataset": {
								"referenceName": "anc_Product",
								"type": "DatasetReference"
							},
							"name": "ancProduct"
						},
						{
							"dataset": {
								"referenceName": "anc_customer",
								"type": "DatasetReference"
							},
							"name": "ancCustomerDiscount"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "lsconnection",
								"type": "LinkedServiceReference"
							},
							"name": "factSalesorderANC"
						}
					],
					"transformations": [
						{
							"name": "join1product"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1salesorder"
						},
						{
							"name": "select2"
						},
						{
							"name": "addColumns"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as integer,",
						"          cust_id as integer,",
						"          order_date as timestamp,",
						"          fin_code_id as string,",
						"          region as string,",
						"          sales_rep as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancSalesorder",
						"source(output(",
						"          id as integer,",
						"          line_id as integer,",
						"          prod_id as integer,",
						"          quantity as integer,",
						"          ship_date as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancSalesorderItems",
						"source(output(",
						"          id as integer,",
						"          name as string,",
						"          description as string,",
						"          prod_size as string,",
						"          color as string,",
						"          quantity as integer,",
						"          unit_price as decimal(18,0),",
						"          picture_name as string,",
						"          category as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancProduct",
						"source(output(",
						"          id as integer,",
						"          fname as string,",
						"          lname as string,",
						"          address as string,",
						"          city as string,",
						"          state as string,",
						"          zip as string,",
						"          phone as string,",
						"          company_name as string,",
						"          type as string,",
						"          discount as integer,",
						"          max_quantity_order as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ancCustomerDiscount",
						"ancSalesorderItems, ancProduct join(prod_id == ancProduct@id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1product",
						"join1product select(mapColumn(",
						"          SalesorderID = ancSalesorderItems@id,",
						"          ProductID = prod_id,",
						"          quantity = ancSalesorderItems@quantity,",
						"          unit_price",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1, ancSalesorder join(SalesorderID == id,",
						"     joinType:'right',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1salesorder",
						"join1 select(mapColumn(",
						"          SalesorderID,",
						"          ProductID,",
						"          quantity,",
						"          unit_price,",
						"          cust_id,",
						"          order_date,",
						"          sales_rep,",
						"          discount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 derive(SalesorderID = concatWS('_', concatWS('_', toString(SalesorderID), toString(ProductID)), toString(sales_rep)),",
						"          DIM_ProductProductKey = concatWS('_',toString(ProductID),'ANC'),",
						"          DIM_CustomerCustomerKey = concatWS('_',toString(cust_id),'ANC'),",
						"          DIM_SalesLocation = concatWS('_',toString(cust_id),'ANC'),",
						"          DIM_EmployeeEmployeekey = concatWS('_',toString(sales_rep),'ANC'),",
						"          DIM_DateDateID = toDate(order_date) - toDate(toTimestamp('1970-01-01', 'yyyy-MM-dd')),",
						"          LineTotal = quantity*(unit_price-unit_price*(discount*0.01)),",
						"          DiscountUnitPrice = unit_price*(iif(isNull(discount), 0, discount)*0.01),",
						"          ActualUnitPrice = unit_price-unit_price*(discount*0.01)) ~> addColumns",
						"join1salesorder, ancCustomerDiscount join(cust_id == ancCustomerDiscount@id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"addColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'fsngroup6',",
						"     folderPath: 'fact_SalesorderANC',",
						"     truncate: true,",
						"     compressionCodec: 'none',",
						"     partitionFileNames:['fact_SalesorderANC.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> factSalesorderANC"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/anc_sales_order')]",
				"[concat(variables('workspaceId'), '/datasets/ancSalesorderItems')]",
				"[concat(variables('workspaceId'), '/datasets/anc_Product')]",
				"[concat(variables('workspaceId'), '/datasets/anc_customer')]",
				"[concat(variables('workspaceId'), '/linkedServices/lsconnection')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}